rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection: Allow users to read/write their own profile
    match /users/{userId} {
      allow read: if request.auth != null; // Allow any authenticated user to read any user document
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Families collection: Allow members to read, authenticated users to write
    match /families/{familyId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.members;
      allow write: if request.auth != null;

      // Shared beans: Allow family members to read/write
      match /beans/{beanId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.members;
      }
    }

    // Invitations collection: Allow invited user to read, authenticated users to write
    match /invitations/{invitationId} {
      allow read: if request.auth != null && resource.data.invitedEmail == request.auth.token.email;
      allow write: if request.auth != null;
    }

    // Personal beans: Only the owner can read/write
    match /beans/{beanId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Brews: Only the owner can read/write
    match /brews/{brewId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}